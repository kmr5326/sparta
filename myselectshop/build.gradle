plugins {
	id 'java'
	// id 'war'  // ← JAR만 쓸 거면 사용 안 함
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.sparta'
version = '0.0.1-SNAPSHOT'

java {
	toolchain { languageVersion = JavaLanguageVersion.of(17) }
}

springBoot {
	mainClass = 'com.sparta.myselectshop.MyselectshopApplication'
}

/* ⬇️ war을 안 쓰므로 bootWar 블록은 아예 제거! */
// bootWar { enabled = false }   // ← 삭제
bootJar { enabled = true }      // (기본값이지만 명시 OK)
jar { enabled = false }         // plain.jar 만들지 않으려면 유지

configurations {
	compileOnly { extendsFrom annotationProcessor }
}

repositories { mavenCentral() }

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'com.mysql:mysql-connector-j'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// JWT
	compileOnly 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// JSON
	implementation 'org.json:json:20230227'
}

/* ⛔️ 제거: WAR 프로젝트 전용 설정
providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
*/

tasks.named('test') { useJUnitPlatform() }
